<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.springcloud.dao.GoodsMapper">
	<resultMap id="BaseResultMap"
		type="com.springcloud.entity.Goods">
		<id column="goods_id" jdbcType="INTEGER" property="goodsId" />
		<result column="goods_name" jdbcType="VARCHAR"
			property="goodsName" />
		<result column="goods_price" jdbcType="DOUBLE"
			property="goodsPrice" />
		<result column="goods_discount" jdbcType="DOUBLE"
			property="goodsDiscount" />
		<result column="goods_status" jdbcType="INTEGER"
			property="goodsStatus" />
		<result column="goods_count" jdbcType="INTEGER"
			property="goodsCount" />
		<result column="goods_is_new" jdbcType="INTEGER"
			property="goodsIsNew" />
		<result column="goods_is_hot" jdbcType="INTEGER"
			property="goodsIsHot" />
		<result column="goods_level" jdbcType="INTEGER"
			property="goodsLevel" />
		<result column="goods_decribe" jdbcType="VARCHAR"
			property="goodsDecribe" />
		<result column="goods_details" jdbcType="VARCHAR"
			property="goodsDetails" />
		<result column="goods_image" jdbcType="VARCHAR"
			property="goodsImage" />
		<result column="type2_id" jdbcType="INTEGER" property="type2Id" />
		<result column="type1_id" jdbcType="INTEGER" property="type1Id" />

	</resultMap>
	<delete id="deleteByPrimaryKey"
		parameterType="java.lang.Integer">
		delete from goods
		where goods_id = #{goodsId,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.springcloud.entity.Goods">
		insert into goods ( goods_name, goods_price,
		goods_discount, goods_status, goods_count,
		goods_is_new, goods_is_hot, goods_level,
		goods_decribe, goods_details, goods_image,
		type2_id)
		values (#{goodsName,jdbcType=VARCHAR}, #{goodsPrice,jdbcType=DOUBLE},
		#{goodsDiscount,jdbcType=DOUBLE}, #{goodsStatus,jdbcType=INTEGER},
		#{goodsCount,jdbcType=INTEGER},
		#{goodsIsNew,jdbcType=INTEGER}, #{goodsIsHot,jdbcType=INTEGER}, #{goodsLevel,jdbcType=INTEGER},
		#{goodsDecribe,jdbcType=VARCHAR}, #{goodsDetails,jdbcType=VARCHAR},
		#{goodsImage,jdbcType=VARCHAR},
		#{type2Id,jdbcType=INTEGER})
	</insert>
	<update id="updateByPrimaryKey"
		parameterType="com.springcloud.entity.Goods">
		update goods
		set
		goods_name = #{goodsName,jdbcType=VARCHAR},
		goods_price = #{goodsPrice,jdbcType=DOUBLE},
		goods_discount = #{goodsDiscount,jdbcType=DOUBLE},
		goods_count = #{goodsCount,jdbcType=INTEGER},
		goods_level = #{goodsLevel,jdbcType=INTEGER},
		goods_decribe = #{goodsDecribe,jdbcType=VARCHAR},
		goods_details = #{goodsDetails,jdbcType=VARCHAR},
		type2_id = #{type2Id,jdbcType=INTEGER}
		where goods_id = #{goodsId,jdbcType=INTEGER}
	</update>


	<select id="selectByPrimaryKey"
		parameterType="java.lang.Integer" resultMap="BaseResultMap">
		select goods_id, goods_name, goods_price, goods_discount, goods_status,
		goods_count,
		goods_is_new, goods_is_hot, goods_level, goods_decribe, goods_details, goods_image,
		type2_id
		from goods
		where goods_id = #{goodsId,jdbcType=INTEGER}
	</select>
	<select id="selectAll" resultMap="BaseResultMap">
		select goods_id, goods_name, goods_price, goods_discount, goods_status,
		goods_count,
		goods_is_new, goods_is_hot, goods_level, goods_decribe, goods_details, goods_image,
		type2_id
		from goods
	</select>
	<select id="select" parameterType="com.springcloud.entity.Goods"
		resultMap="BaseResultMap">
		select g.goods_id, g.goods_name, g.goods_price, g.goods_discount,
		g.goods_status, g.goods_count,
		g.goods_is_new, g.goods_is_hot, g.goods_level, g.goods_decribe, g.goods_details,
		g.goods_image,
		t2.type2_id,t1.type1_id
		from type2 t2 JOIN goods g on t2.type2_id=g.type2_id
		JOIN type1 t1 ON t1.type1_id=t2.type1_id
		<!-- 当第一个条件为and或者or时，使用where来代替and或者 or -->
		<trim prefix="where" prefixOverrides="and|or">
			<if test="goodsName!='%%' and goodsName!='%null%'">
				g.goods_name like #{goodsName}
			</if>
			<if test="goodsPriceMin!=null and goodsPriceMax!=null ">
				and g.goods_price between #{goodsPriceMin} and
				#{goodsPriceMax}
			</if>
			<!-- <if test="type1Id!=-1"> and t1.type1_id=#{type1Id} </if> <if test="type2Id!=-1"> 
				and t2.type2_id=#{type2Id} </if> -->
		</trim>
	</select>
	<!-- 根据商品id修改商品信息 -->
	<update id="updateGoodsById"
		parameterType="com.springcloud.entity.Goods">
		update goods set
		<if test="goodsIsNew!=null">
			goods_is_new=#{goodsIsNew}
		</if>
		<if test="goodsIsHot!=null">
			goods_is_hot=#{goodsIsHot}
		</if>
		<if test="goodsStatus!=null">
			goods_status=#{goodsStatus}
		</if>
		<if test="goodsImage!=null and goodsImage!=''">
			goods_image=#{goodsImage}
		</if>
		where goods_id=#{goodsId}
	</update>
	<!-- 查询商品的TOP10 -->
	<select id="selectGoodsTotal" resultMap="goodsGroupMap">
		select
		g.goods_name,SUM(o.transaction_total) as goods_sum
		FROM goods g JOIN order_detail o on g.goods_id =o.goods_id
		GROUP BY g.goods_name
		ORDER BY 2 desc
		LIMIT 0,10
	</select>
	<resultMap type="com.springcloud.entity.Goods"
		id="goodsGroupMap">
		<result column="goods_name" property="goodsName" />
		<result column="goods_sum" property="goodsSum" />
	</resultMap>
</mapper>